plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id "org.sonarqube" version "4.2.1.3168"
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.medicalcare'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sonar {
	properties {
		property "sonar.projectKey", "MedicalCare"
		property "sonar.projectName", "MedicalCare"
		property "sonar.qualitygate.wait", true
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", "sqp_1b20b40fe8410399f198a41e488f95213f4aab83"
		property "sonar.coverage.jacoco.xmlReportPath", "${buildDir}/reports/jacoco.xml"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
	jacoco {
		destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
		classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
	}// report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
